// Copyright 2020 Fuji-Iot authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "fuji_ac_unit_sim.h"
#include "gtest/gtest.h"

namespace fuji_iot
{
    namespace sim
    {
        // Base for suite of tests based on goldens (from real controller).
        // Used to verify correctness of simulation.
        class FujiAcUnitSimTest : public testing::Test
        {
        protected:
            void ExpectMasterFrame(std::array<uint8_t, 8> mf, std::array<uint8_t, 8> cf)
            {
                auto r = sim_->GetNextMasterFrame();
                auto expected = FujiMasterFrame(mf);
                EXPECT_EQ(expected, r);
                sim_->PushControllerFrame(FujiControllerFrame(cf));
            }

            void SetUp() override
            {
                sim_ = std::unique_ptr<FujiAcUnitSim>(new FujiAcUnitSim());
            }
            std::unique_ptr<FujiAcUnitSim> sim_;
        };

        TEST_F(FujiAcUnitSimTest, Startup)
        {
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x00, 0x20}, {0x20, 0x81, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x20, 0x1f, 0x1f, 0x05, 0x01, 0x00}, {0x20, 0xa1, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
        }

        TEST_F(FujiAcUnitSimTest, TestReconnect)
        {
            sim_->status_->SetControllerPresent(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x20, 0x1f, 0x1f, 0x05, 0x01, 0x00}, {0x20, 0xa1, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
        }

        TEST_F(FujiAcUnitSimTest, RemoteTurnOnTurnOff)
        {
            sim_->status_->SetControllerPresent(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x12, 0x00, 0x2f, 0x00});
            sim_->SetEnabled(true);
            sim_->SetTemperature(22);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x47, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x47, 0x16, 0x00, 0x2f, 0x00});
            sim_->SetEnabled(false);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x16, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x46, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x46, 0x16, 0x00, 0x2f, 0x00});
        }

        TEST_F(FujiAcUnitSimTest, TestGolden)
        {
            sim_->status_->SetControllerPresent(true);
            sim_->status_->SetTemperature(22);
            sim_->status_->SetEnabled(true);

            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x47, 0x16, 0x00, 0x2f, 0x00});
            // Set fan to high
            sim_->SetFan(fan_t::HIGH);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x37, 0x16, 0x40, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x37, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x37, 0x16, 0xa0, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x37, 0x16, 0x00, 0x2f, 0x00});
            // Set fan to medium
            sim_->SetFan(fan_t::MEDIUM);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x27, 0x16, 0x40, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x27, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x27, 0x16, 0xa0, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x27, 0x16, 0x00, 0x2f, 0x00});
            // Set fan to low
            sim_->SetFan(fan_t::LOW);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x17, 0x16, 0x40, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x17, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x17, 0x16, 0xa0, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x17, 0x16, 0x00, 0x2f, 0x00});
            // Set fan to auto
            sim_->SetFan(fan_t::AUTO);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x40, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20},
                              {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            // Set temp to 18
            sim_->SetTemperature(18);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x12, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x12, 0x00, 0x2f, 0x00});
            // Set temp to 22
            sim_->SetTemperature(22);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            // Set temp to 25
            sim_->SetTemperature(25);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x19, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x19, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x19, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x19, 0x00, 0x2f, 0x00});
            // Set temp to 30
            sim_->SetTemperature(30);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            // Set mode to dry
            sim_->SetMode(mode_t::DRY);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x05, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x05, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x05, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x05, 0x1e, 0x00, 0x2f, 0x00});
            // Set mode to fan
            sim_->SetMode(mode_t::FAN);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            // Set mode to heat
            sim_->SetMode(mode_t::HEAT);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x09, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x09, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x09, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x09, 0x1e, 0x00, 0x2f, 0x00});
            // Set mode to auto
            sim_->SetMode(mode_t::AUTO);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x0b, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x0b, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x0b, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x0b, 0x1e, 0x00, 0x2f, 0x00});
            // Set mode to cool
            sim_->SetMode(mode_t::COOL);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            // Enable econ
            sim_->SetEconomy(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x9e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x9e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x9e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x9e, 0x00, 0x2f, 0x00});
            // Disable econ
            sim_->SetEconomy(false);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            // Enable swing
            sim_->SetSwing(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0x44, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x04, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0xa4, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x04, 0x2f, 0x00});
            // Disable swing
            sim_->SetSwing(false);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x1e, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x1e, 0x00, 0x2f, 0x00});
            // Set temp to 23
            sim_->SetTemperature(23);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            // Single blow direction
            sim_->SetSwingStep(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            // Again
            sim_->SetSwingStep(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            // Again
            sim_->SetSwingStep(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            // Turning off
            sim_->SetEnabled(false);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x06, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x06, 0x17, 0x00, 0x2f, 0x00});
        }

        TEST_F(FujiAcUnitSimTest, TurnOn)
        {
            sim_->status_->SetControllerPresent(true);
            sim_->status_->SetTemperature(23);
            sim_->status_->SetFan(fan_t::AUTO);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x06, 0x17, 0x00, 0x2f, 0x00});
            // Set enabled.
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->Enabled());
        }

        TEST_F(FujiAcUnitSimTest, WiredControlGolden)
        {
            sim_->status_->SetControllerPresent(true);
            sim_->status_->SetTemperature(23);
            sim_->status_->SetFan(fan_t::AUTO);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x06, 0x17, 0x00, 0x2f, 0x00});
            // state_->SetEnabled(true);
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x06, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x17, 0x00, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->Enabled());
            // set temp 18
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x17, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x12, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x12, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x12, 0x00, 0x2f, 0x00});
            EXPECT_EQ(18, sim_->Temperature());
            // set temp 22
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(22, sim_->Temperature());
            // set fan max
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x47, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x47, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x47, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(fan_t::MAX, sim_->Fan());
            // set fan high
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x47, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x37, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x37, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x37, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x37, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x37, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(fan_t::HIGH, sim_->Fan());
            // set fan medium
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x37, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x27, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x27, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x27, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x27, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x27, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(fan_t::MEDIUM, sim_->Fan());
            // set fan low
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x27, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x17, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x17, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x17, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x17, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x17, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(fan_t::LOW, sim_->Fan());
            // set fan auto
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x17, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(fan_t::AUTO, sim_->Fan());
            // set mode dry and temp to 26
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x05, 0x1a, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x05, 0x1a, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x05, 0x1a, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x05, 0x1a, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x05, 0x1a, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::DRY, sim_->Mode());
            EXPECT_EQ(26, sim_->Temperature());
            // // set mode heat and temp to 21
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x05, 0x1a, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x09, 0x15, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x09, 0x15, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x09, 0x15, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x09, 0x15, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x09, 0x15, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::HEAT, sim_->Mode());
            EXPECT_EQ(21, sim_->Temperature());
            // // set mode fan
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x09, 0x15, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x03, 0x00, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::FAN, sim_->Mode());
            // // set auto and temp to 24
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x0b, 0x18, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x0b, 0x18, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x0b, 0x18, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x0b, 0x18, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x0b, 0x18, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::AUTO, sim_->Mode());
            EXPECT_EQ(24, sim_->Temperature());
            // // set mode fan
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x0b, 0x18, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x03, 0x00, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0x40, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x03, 0x00, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::FAN, sim_->Mode());
            // set mode cool and temp to 22
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x03, 0x12, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(mode_t::COOL, sim_->Mode());
            EXPECT_EQ(22, sim_->Temperature());
            // set economy on
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x96, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x96, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x96, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x96, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x96, 0x00, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->Economy());
            // set economy off
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x96, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(false, sim_->Economy());
            // set swing on
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x04, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x04, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x04, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa4, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x04, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->Swing());
            // set swing off
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa4, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(false, sim_->Swing());
            // // swing step
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x02, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->SwingStep());
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(false, sim_->SwingStep());
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            // // swing step
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x02, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->SwingStep());
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(false, sim_->SwingStep());
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            // set swing on
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x04, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x04, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x04, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa4, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x04, 0x2f, 0x00});
            EXPECT_EQ(true, sim_->Swing());
            // set swing off
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa4, 0x01, 0x20}, {0x20, 0x81, 0x08, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0x00, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            ExpectMasterFrame({0x00, 0xa0, 0x00, 0x07, 0x16, 0xa0, 0x01, 0x20}, {0x20, 0x81, 0x00, 0x07, 0x16, 0x00, 0x2f, 0x00});
            EXPECT_EQ(false, sim_->Swing());
        }

    } // namespace sim
} // namespace fuji_iot
